
/* 

Esto es del corazon spinner

.lds-heart {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
  transform: rotate(45deg);
  transform-origin: 40px 40px;
}
.lds-heart div {
  top: 32px;
  left: 32px;
  position: absolute;
  width: 32px;
  height: 32px;
  background: rgb(216, 173, 108);
  animation: lds-heart 1.5s infinite cubic-bezier(0.215, 0.61, 0.355, 1);
}
.lds-heart div:after,
.lds-heart div:before {
  content: " ";
  position: absolute;
  display: block;
  width: 32px;
  height: 32px;
  animation: lds-heartTop 1.5s infinite cubic-bezier(0.215, 0.61, 0.355, 1);
}
.lds-heart div:before {
  left: -24px;
  border-radius: 50% 0 0 50%;
}
.lds-heart div:after {
  top: -24px;
  border-radius: 50% 50% 0 0;
}

@keyframes lds-heart {
  0% {
    transform: scale(1.70);
    background: rgb(174, 211, 216);
    /* transform: scale(0.95); *//*
  }
  5% {
    transform: scale(2.3);
    background: rgb(141, 208, 216);  
    /* transform: scale(1.1); *//*
  }
  39% {
    transform: scale(1.40);
    background: rgb(174, 211, 216);
    /* transform: scale(0.85); *//*
  }
  45% {
    transform: scale(2.1);
    background: rgb(255, 237, 180);
    /* transform: scale(1); *//*
  }
  60% {
    transform: scale(1.9);
    background: rgb(255, 226, 152);
    /* transform: scale(0.95); *//*
  }
  100% {
    transform: scale(1.5);
    background: rgb(255, 237, 180);
    /* transform: scale(0.9); *//*
  }
  


}


@keyframes lds-heartTop {
  0% {
    background: rgb(174, 211, 216);
    /* transform: scale(0.95); *//*
  }
  5% {
    background: rgb(141, 208, 216);  
    /* transform: scale(1.1); *//*
  }
  39% {
    background: rgb(174, 211, 216);  
    /* transform: scale(0.85); *//*
  }
  45% {
    background: rgb(255, 237, 180);
    /* transform: scale(1); *//*
  }
  60% {
    background: rgb(255, 226, 152);
    /* transform: scale(0.95); *//*
  }
  100% {
    background: rgb(255, 237, 180);
    /* transform: scale(0.9); *//*
  }
  


} 
*/














/*
Esto estaba en buscador avanzado




 //Dropdown Content (Hidden by Default)// 

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 180px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}


// Links inside the dropdown // 
.dropdown-content label {
  
  color: black;
  position:absolute;
  text-decoration: none;
  display: inline-block;
}

// Change color of dropdown links on hover // 
.dropdown-content label:hover {
  color: rgb(180, 156, 23)
  
}
// Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) // 

.show {
  
  //  Muestra el contenido del filtro o exlcuir// 

  display:block; 
  
}

.noShow {
  
  //  Oculta el contenido del filtro o exlcuir// 
  display:none;

}




TYPESCRIPT


//En animations//

trigger('clickContent', [
      state('noShow', 
        style({ 
          
          display: 'none',
          height: '0px',
          opacity: 0.6

        })
      ),
      state('show', 
        style({ 
          display: 'block', 
          height: '280px',
          opacity: 1
         })
      ),
      transition('show => noShow', [
        animate('0s')
      ]),
      transition('noShow => show', [
        animate('0.3s')
      ])
    ]),


    

    trigger('clickBTN', [
      state('sube', 
        style({ 
          

          'margin-top':'0px'

        })
      ),
      state('baja', 
        style({ 
          
          'margin-top':'240px'

         })
      ),
      transition('sube => baja', [
        animate('0.3s')
      ]), 
      transition('baja => sube', [
        animate('0.3s')
      ])
    ]),

    ////





filtroClick: boolean = false;

clickEnFiltro() {
  
  if(this.filtroClick==true){

    this.filtroClick=false;
    console.log("Lo desactiva", this.filtroClick);
  }
  else
  {
    this.filtroClick=true;
    console.log("Activado", this.filtroClick);
  }

}





excluirClick: boolean = false;

clickEnExcluir() {
  
  if(this.excluirClick==true){

    this.excluirClick=false;
    console.log("Lo desactiva", this.excluirClick);
  }
  else
  {
    this.excluirClick=true;
    console.log("Activado", this.excluirClick);
  }

}




HTML

<div class="dropdown">
        <button class="btn btn - boton1" [@clickBTN]="filtroClick ? 'baja' : 'sube'" (click)="clickEnExcluir()">Exluir</button>
        <div id="myDropdown2"  [@clickContent]="excluirClick ? 'show' : 'noShow'" class="dropdown-content">
          <br>&nbsp;
          <input type="checkbox" id="cria2" [(ngModel)]="excluirAplica.cria" name="cria" value="true" class="check">&nbsp;
            <label class="tran" for="cria2"> Edad Cria </label>
            <br><br>&nbsp;
            <input type="checkbox" id="adulto2" [(ngModel)]="excluirAplica.adulto" name="adulto" value="true" class="check">&nbsp;
            <label class="tran" for="adulto2"> Edad Adulto </label>
            <br><br>&nbsp;
            <input type="checkbox" id="grande2" [(ngModel)]="excluirAplica.grande" name="grande" value="true" class="check"> &nbsp;
            <label class="tran" for="grande2"> Tamaño Grande </label>
            <br><br>&nbsp;
            <input type="checkbox" id="mediano2" [(ngModel)]="excluirAplica.mediano" name="mediano" value="true" class="check">&nbsp;
            <label class="tran" for="mediano2"> Tamaño Mediano </label>
            <br><br>&nbsp;
            <input type="checkbox" id="chico2" [(ngModel)]="excluirAplica.chico" name="chico" value="true" class="check">&nbsp;
            <label class="tran" for="chico2"> Tamaño Chico </label>
            <br><br>&nbsp;
        </div>
      </div> 
      
      
      
      */